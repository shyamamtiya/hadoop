/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MyFrames.MyPanels;

//import AppPackage.AnimationClass;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
//import javax.swing.JProgressBar;
import javax.swing.JScrollPane;

/**
 *
 * @author root
 */
public class Panel3 extends javax.swing.JPanel {
        private Process p=null;
  //      JList js1;
    //    JScrollPane jsp1;
    /**
     * Creates new form Panel3
     */
    public Panel3() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(152, 239, 227));

        jTextField1.setText("Browse hadoop tar file...");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        jButton1.setText("Browse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        jButton2.setText("Un-Tar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("DejaVu Sans", 1, 18)); // NOI18N
        jButton3.setText("Configure Hadoop");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 3, 51)); // NOI18N
        jLabel1.setText("INSTALL HADOOP");

        jLabel2.setIcon(new javax.swing.ImageIcon("/root/Desktop/hadoop.png")); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel2MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(259, 259, 259))))))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(66, 66, 66)
                .addComponent(jButton3)
                .addGap(121, 121, 121))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser jc = new JFileChooser();
        jc.showOpenDialog(null);
        File f = jc.getSelectedFile();
        String filename = f.getAbsolutePath();
        jTextField1.setText(filename);



    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Process p=null;
        String s=null;
        BufferedReader br2;
        String cmd="tar -xvzf "+jTextField1.getText();
        try{p = Runtime.getRuntime().exec(cmd);
        br2 = new BufferedReader(
        new InputStreamReader(p.getInputStream()));
        //JOptionPane.showMessageDialog(null,"Please wait untill u get a message your File is Un-tarring....");
        ProgressBar pg=new ProgressBar();
        pg.setVisible(true);
        ProgressBar.Run r1=pg.new Run();
        new Thread(r1).start();
        
        while ((s= br2.readLine()) != null){
            System.out.println(s);
        }
        JOptionPane.showMessageDialog(null,"Un-tar finished....click to Configure Hadoop");
            pg.setVisible(false);
        }
        catch(IOException e){e.printStackTrace();}

        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        /*ProgressBar pg=new ProgressBar();
        pg.setVisible(true);
        ProgressBar.Run r1=pg.new Run();
        new Thread(r1).start();*/
                
        
        
        //Disabling ipv6
        BufferedReader br=null;
        BufferedReader br2=null;
        BufferedWriter bw=null;
        String cmd=null;
        String s=null;
     try{
        br=new BufferedReader(new FileReader("/root/NetBeansProjects/Hadoop_installation2/src/MyFrames/MyPanels/sysctl.txt"));
            bw=new BufferedWriter (new FileWriter ("/etc/sysctl.conf",true));
            while((cmd=br.readLine())!=null){
                bw.flush();
                bw.write(cmd+"\n");
                bw.flush();
            }
            System.out.println("ipv6 disabled successfully");
        }
            catch(Exception e){e.printStackTrace();}

        
    
        try{
                Process r = Runtime.getRuntime().exec("chmod 777 /root/NetBeansProjects/Hadoop_installation2/src/MyFrames/MyPanels/user_login.sh");
                ProcessBuilder pb = new ProcessBuilder("/root/NetBeansProjects/Hadoop_installation2/src/MyFrames/MyPanels/user_login.sh");
                Process p = pb.start();
                BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));
                String line = null;
                
                 while ((line = reader.readLine()) != null)
                    System.out.print(line);
                
                System.out.println(" login successfully");
        }
            catch (IOException e){
                e.printStackTrace();}

        
        
        
        
        try {
            Runtime.getRuntime().exec("chmod 777 /root/NetBeansProjects/Hadoop_installation2/src/MyFrames/MyPanels/Hadoop_install1.sh");
            Process p=Runtime.getRuntime().exec("/root/NetBeansProjects/Hadoop_installation2/src/MyFrames/MyPanels/Hadoop_install1.sh");
            BufferedReader reader = new BufferedReader(new InputStreamReader(p.getInputStream()));
            String line = null;
            while ((line = reader.readLine()) != null) 
                System.out.println(line);
     }
        catch (Exception e) {e.printStackTrace();}
        
        
        
        
        
        
        try{
        br=new BufferedReader(new FileReader("/root/NetBeansProjects/Hadoop_installation2/src/MyFrames/MyPanels/bashrc.txt"));
            bw=new BufferedWriter (new FileWriter ("/home/hadoop/.bashrc",true));
            while((cmd=br.readLine())!=null){
                bw.flush();
                bw.write(cmd+"\n");
                bw.flush();
            }
        }
            catch(Exception e){e.printStackTrace();}
        System.out.println("bashrc completed");
        
        
        
     String oldFileName1 = "hadoop-env.sh";
     String tmpFileName1 = "hadoop-env_try.sh";
      
      br = null;
      bw = null;
      try {
         br = new BufferedReader(new FileReader(new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1)));
         bw = new BufferedWriter(new FileWriter(new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1)));
         String line;
         while ((line = br.readLine()) != null) {
            if (line.contains("export JAVA_HOME=${JAVA_HOME}"))
               line = line.replace("export JAVA_HOME=${JAVA_HOME}","export JAVA_HOME=/opt/jdk8/");
            bw.write(line+"\n");
         }
      } catch (Exception e) {
         return;
      } finally {
         try {
            if(br != null)
               br.close();
         } catch (IOException e) {
            //
         }
         try {
            if(bw != null)
               bw.close();
         } catch (IOException e) {
            //
         }
      }
      // Once everything is complete, delete old file..
      File oldFile1 = new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1);
      oldFile1.delete();

      // And rename tmp file's name to old file name
      File newFile1 = new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1);
      newFile1.renameTo(oldFile1);
        System.out.println("Hadoop-env completed");
      

     
        
      
      oldFileName1 = "core-site.xml";
      tmpFileName1 = "core-site_try.xml";

      br = null;
      bw = null;
      try {
         br = new BufferedReader(new FileReader(new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1)));
         bw = new BufferedWriter(new FileWriter(new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1)));
         String line;
         while ((line = br.readLine()) != null) {
            if (line.contains("<configuration>"))
               line = line.replace("<configuration>","<!--<configuration>-->");
            if (line.contains("</configuration>"))
               line = line.replace("</configuration>","<!--</configuration>-->\n<configuration>\n" +
                                                            "<property>\n" +
                                                            "  <name>fs.default.name</name>\n" +
                                                            "    <value>hdfs://localhost:9000</value>\n" +
                                                            "</property>\n" +
                                                            "</configuration>\n" +
                                                            "");
            bw.write(line+"\n");
         }
      } catch (Exception e) {
         return;
      } finally {
         try {
            if(br != null)
               br.close();
         } catch (IOException e) {
            //
         }
         try {
            if(bw != null)
               bw.close();
         } catch (IOException e) {
            //
         }
      }
      // Once everything is complete, delete old file..
      oldFile1 = new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1);
      oldFile1.delete();

      // And rename tmp file's name to old file name
      newFile1 = new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1);
      newFile1.renameTo(oldFile1);
        System.out.println("core-site completed");
      
      
      
      
      
      oldFileName1 = "hdfs-site.xml";
      tmpFileName1 = "hdfs-site_try.xml";

      br = null;
      bw = null;
      try {
         br = new BufferedReader(new FileReader(new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1)));
         bw = new BufferedWriter(new FileWriter(new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1)));
         String line;
         while ((line = br.readLine()) != null) {
            if (line.contains("<configuration>"))
               line = line.replace("<configuration>","<!--<configuration>-->");
            if (line.contains("</configuration>"))
               line = line.replace("</configuration>","<!--</configuration>-->\n<configuration>\n" +
                                                                    "<property>\n" +
                                                                    " <name>dfs.replication</name>\n" +
                                                                    " <value>1</value>\n" +
                                                                    "</property>\n" +
                                                                    "<property>\n" +
                                                                    "  <name>dfs.name.dir</name>\n" +
                                                                    "    <value>file:///home/hadoop/hadoop_tmp/hdfs/namenode</value>\n" +
                                                                    "</property>\n" +
                                                                    "\n" +
                                                                    "<property>l\n" +
                                                                    "  <name>dfs.data.dir</name>\n" +
                                                                    "    <value>file:///home/hadoop/hadoop_tmp/hdfs/datanode</value>\n" +
                                                                    "</property>\n" +
                                                                    "</configuration>\n" +
                                                                    "");
            bw.write(line+"\n");
         }
      } catch (Exception e) {
         return;
      } finally {
         try {
            if(br != null)
               br.close();
         } catch (IOException e) {
            //
         }
         try {
            if(bw != null)
               bw.close();
         } catch (IOException e) {
            //
         }
      }
      // Once everything is complete, delete old file..
      oldFile1 = new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1);
      oldFile1.delete();

      // And rename tmp file's name to old file name
      newFile1 = new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1);
      newFile1.renameTo(oldFile1);
        System.out.println("hdfs-site completed");

        
        
        
      oldFileName1 = "yarn-site.xml";
      tmpFileName1 = "yarn-site_try.xml";

      br = null;
      bw = null;
      try {
         br = new BufferedReader(new FileReader(new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1)));
         bw = new BufferedWriter(new FileWriter(new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1)));
         String line;
         while ((line = br.readLine()) != null) {
            if (line.contains("<configuration>"))
               line = line.replace("<configuration>","<!--<configuration>-->");
            if (line.contains("</configuration>"))
               line = line.replace("</configuration>","<!--</configuration>-->\n<configuration>\n" +
                                                        "<property>\n" +
                                                        "  <name>yarn.nodemanager.aux-services</name>\n" +
                                                        "    <value>mapreduce_shuffle</value>\n" +
                                                        " </property>\n" +
                                                        "</configuration>"
                                                       );
            bw.write(line+"\n");
         }
      } catch (Exception e) {
         return;
      } finally {
         try {
            if(br != null)
               br.close();
         } catch (IOException e) {
            //
         }
         try {
            if(bw != null)
               bw.close();
         } catch (IOException e) {
            //
         }
      }
      // Once everything is complete, delete old file..
      oldFile1 = new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1);
      oldFile1.delete();

      // And rename tmp file's name to old file name
      newFile1 = new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1);
      newFile1.renameTo(oldFile1);
        System.out.println("yarn-site completed");
      
      
      
      
      
    
        try {p=null;
            p = Runtime.getRuntime().exec("cp /home/hadoop/hadoop/etc/hadoop/mapred-site.xml.template /home/hadoop/hadoop/etc/hadoop/mapred-site.xml");
            p.waitFor();
            oldFileName1 = "mapred-site.xml";
      tmpFileName1 = "mapred-site_try.xml";

      br = null;
      bw = null;
      try {
         br = new BufferedReader(new FileReader(new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1)));
         bw = new BufferedWriter(new FileWriter(new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1)));
         String line;
         while ((line = br.readLine()) != null) {
            if (line.contains("<configuration>"))
               line = line.replace("<configuration>","<!--<configuration>-->");
            if (line.contains("</configuration>"))
               line = line.replace("</configuration>","<!--</configuration>-->\n<configuration>\n" +
                                                            "<property>\n" +
                                                            "  <name>mapreduce.framework.name</name>\n" +
                                                            "   <value>yarn</value>\n" +
                                                            " </property>\n" +
                                                            "</configuration>\n" +
                                                        "");
            bw.flush();
            bw.write(line+"\n");
         }
      } catch (Exception e) {
         return;
      } finally {
         try {
            if(br != null)
               br.close();
         } catch (IOException e) {
            //
         }
         try {
            if(bw != null)
               bw.close();
         } catch (IOException e) {
            //
         }
      }
      // Once everything is complete, delete old file..
      oldFile1 = new File("/home/hadoop/hadoop/etc/hadoop",oldFileName1);
      oldFile1.delete();

      // And rename tmp file's name to old file name
      newFile1 = new File("/home/hadoop/hadoop/etc/hadoop",tmpFileName1);
      newFile1.renameTo(oldFile1);
        System.out.println("mapred-site completed");
      
        } catch (IOException ex) {
            ex.printStackTrace();        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
     
        JOptionPane.showMessageDialog(null,"Hadoop successfully configured!");
        //pg.setVisible(false);
    
        
        
        
        
        
      
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseReleased
       /* // TODO add your handling code here:
        AnimationClass ac=new AnimationClass();
        ac.jLabelYDown(0, 225, 10,1, jLabel2);
        ac.jLabelYUp(225, 0, 10,1, jLabel2);*/
    

    }//GEN-LAST:event_jLabel2MouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}





